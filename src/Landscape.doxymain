/**
 * @mainpage Landscape
 * @section Landscape Проект Landscape
 * Программа генерирует и отображает ландшавт. Используются
 * библиотеки OpenGL, GLFrontend и Seriazliation.\n Документация последних
 * двух занесена в эту документацию.
 *
 * @section Chunk 
 * Ландшафт представляет из себя чанк (или набор чанков) Landscape::Chunk, который по
 * опреленному закону каждой точке плоскости (x,y), лежащей горизонтально, задает
 * значение z высоты ландшафта в этой точке.\n Так как в понятиях проекта Landscape
 * высота откладывается по координате z, то во всех функциях библиотеки OpenGL
 * координаты z и y меняются местами.\n
 * <i>В данном случае, ландшафт - это объект класса Landscape::LandscapeChunk, матрица
 * которого состоит из объектов класса Landscape::MatrixChunk.</i>
 *
 * @section Graphics 
 * Основой проекта является класс графики Landscape::Graphics и его главный чанк (Landscape::Chunk).\n
 * Этот класс рисует всю графику OpenGl. Главный чанк генерируется объектом класса
 * Landscape::Generator, который принимается объектом графики.
 *
 * @section Camera
 * Камера представляется классом Landscape::Camera, объект которого управляется классом Landscape::ControlEventHandler.
 * 
 * @section GLFronted Библиотека GLFronted
 * Реализует простенький механизм создания окна OpenGL приложения,
 * обработки событий и всего, что связано с клиентской стороной приложения.\n
 * Основой библиотеки является класс GLFrontEnd::Client, объекты которого
 * отвечают за создание окна, работу с ним, с контекстовм GL и т.п.\n Для связи
 * с остальной часть приложения, GLFrontEnd::Client использует интерфейсы
 * GLFrontEnd::Graphics и GLFrontEnd::ControlEventHandler.
 * 
 * @section Serialization Библиотека Serialization
 * Реализует простенький механизм сериализации с помощью
 * динамического дерева наследования.\n Смысл заключается в том,
 * что запись и чтение для систем, использующих библиотеку производится
 * одинаково.\n На вход сериализуемому объекту подается объект класса
 * Serialization::Serializer, кторый может как записывать данные, переданные
 * ему в параметре data, так и считывать.\n От объекта требуется только построить
 * процедуру сериализации, учитывая данный подход.
 */